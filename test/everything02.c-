// C-F13
//
// Test all the basic elements of C-
//
//
int gromit;

wallace(int wrong, trousers)
{
    bool close:true, shave:false;
   
    close;
    close = shave;
    wrong = trousers % (666/wrong);
    gromit = wrong * trousers - gromit + -42;
    gromit += 27182818;
    gromit -= 31415927;
    close = wrong < trousers and trousers <= gromit;
    shave = wrong > trousers and trousers >= gromit;
    {
        int a, grand:1/2, day:3*4, out:-9;
        a = grand += day -= out;
    }
    close = -1*2+3<4*5 and 6+7>-3;
    shave = true or ((-(1*(2+3)))<(4*5) and ((6+7)>(-3)));
    if (shave != close) shave = not  close;
    if (not (shave == close)  or  not close) shave = true;
    else close = false;
    while (shave) {
        static int were, rabbit;
        static int sheep[10];

        sheep[2] = 1618;
        if (sheep[2]<496) break;
        wallace(gromit--, were-rabbit);
        { 
            int the, wrong, trousers;

            the = wrong += trousers++;
            if (were == rabbit) were = wrong--;  // assignment is in test
        }
    }
    return;
}       


bool penguin(char Feathers, McGraw[]) 
{
    static char tottington:'x';
    char  Wensleydale[17]:"cheeeeeese";

    tottington = Feathers;
    McGraw = Feathers;
    Wensleydale = McGraw;
    Wensleydale[*McGraw] = '*';
    McGraw = "A Matter of Loaf and Death";

    { char c;
        foreach (c in McGraw) if (c=='f') return true;
    }
}        

int Wendolene(int wool; bool shaun; int yarn[]; bool preston[])
{
    int void;
    return wool + yarn[0] + *yarn + yarn[7*wool];
}


bool ramsBottom()
{
    int chicken[2];
    bool run[3];
    int wallace[2], gromit[3];

    42 * Wendolene(1+2+3, not true or true and false, chicken, run);
    run[*run-1];

    return not wallace[1]>=-gromit[2]*3;
}

int cheese(int x, y) while (x>0) if (y>3) x--; else return x*x%y;

int Wensleydale(int x; int y) return cheese(x, gromit);  // weird parm list

int main()
{
    int wool, yarn[113];
    bool shaun, preston[22];

    wallace(cheese(62, -311), gromit);
    return Wendolene(*preston**yarn, shaun, yarn, preston);
}

bool aBig_LongVariableName_6__;
int    odd  ,	separation 		,of,                  stuff ;

// some bad stuff
if x>3 then y=2
x-=x--3
void void(void) {void x; void}
x'y'


